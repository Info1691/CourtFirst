name: Build breach candidates & JSON

on:
  workflow_dispatch:
    inputs:
      commit_outputs:
        description: "Commit generated files back to CourtFirst repo?"
        type: boolean
        default: false
      open_pr_to_breach_ui:
        description: "Open PR to Breach-ui with breaches.json?"
        type: boolean
        default: false

permissions:
  contents: write          # needed only if you set commit_outputs=true
  pull-requests: write     # needed only if you set open_pr_to_breach_ui=true

env:
  LTJ_LINES: LTJ-ui/out/LTJ.lines.json
  LTJ_CITATIONS: LTJ-ui/out/LTJ.citations.json
  LTJ_INDEX: LTJ-ui/out/LTJ.index.json
  OUT_DIR: out
  OUT_CANDIDATES: out/candidates.json
  OUT_BREACHES: out/breaches.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1) Check out THIS repo (CourtFirst)
      - name: Check out CourtFirst
        uses: actions/checkout@v4

      # 2) Check out LTJ-ui (PRIVATE) â€” requires a read PAT in CourtFirst secrets
      - name: Check out LTJ-ui (private)
        uses: actions/checkout@v4
        with:
          repository: Info1691/LTJ-ui
          ref: main
          path: LTJ-ui
          token: ${{ secrets.LTJ_UI_PAT }}  # <-- create this secret in CourtFirst with contents:read scope at minimum

      # 3) Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 4) Build outputs from LTJ-ui data using CourtFirst tools
      - name: Prepare folders
        run: mkdir -p "${OUT_DIR}"

      - name: Build candidates from LTJ-ui artifacts
        run: |
          python tools/build_candidates.py \
            --ltj-lines "${LTJ_LINES}" \
            --ltj-citations "${LTJ_CITATIONS}" \
            --ltj-index "${LTJ_INDEX}" \
            --out "${OUT_CANDIDATES}"

      - name: Export Breach-ui JSON
        run: |
          python tools/export_breach_ui_json.py \
            --input "${OUT_CANDIDATES}" \
            --out "${OUT_BREACHES}"

      # 5) Upload artifacts so you can download them from the run page
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: courtfirst-out
          path: |
            ${OUT_CANDIDATES}
            ${OUT_BREACHES}

      # 6) (Optional) Commit generated files back to CourtFirst
      - name: Commit outputs into CourtFirst
        if: ${{ inputs.commit_outputs }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "${OUT_DIR}/"
          git commit -m "chore: update generated breaches outputs" || echo "No changes to commit"
          git push

      # 7) (Optional) Open a PR to Breach-ui with the new breaches.json
      - name: Check out Breach-ui (target)
        if: ${{ inputs.open_pr_to_breach_ui }}
        uses: actions/checkout@v4
        with:
          repository: Info1691/Breach-ui
          ref: main
          path: Breach-ui
          token: ${{ secrets.BREACH_UI_PAT }} # fine-grained PAT with contents:write, pull_requests:write on Breach-ui

      - name: Stage breaches.json into Breach-ui
        if: ${{ inputs.open_pr_to_breach_ui }}
        run: |
          cp "${OUT_BREACHES}" "Breach-ui/breaches.json"

      - name: Create PR into Breach-ui
        if: ${{ inputs.open_pr_to_breach_ui }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.BREACH_UI_PAT }}
          path: Breach-ui
          commit-message: "Update breaches.json from CourtFirst"
          branch: update-breaches-from-courtfirst
          title: "Update breaches.json (automated from CourtFirst)"
          body: "This PR updates **breaches.json** generated from LTJ-ui artifacts via CourtFirst."
          add-paths: |
            breaches.json
