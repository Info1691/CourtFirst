name: Extract cases from LTJ lines

on:
  workflow_dispatch:
    inputs:
      start_line:
        description: "Start line (inclusive) in LTJ(LTK).lines.json"
        required: true
        default: "1276"
      end_line:
        description: "End line (inclusive) in LTJ(LTK).lines.json"
        required: true
        default: "3083"
      ltj_ref:
        description: "LTJ-ui ref (branch/tag/sha)"
        required: true
        default: "main"
      lines_filename:
        description: "File name under LTJ-ui/out (LTJ.lines.json or LTK.lines.json)"
        required: true
        default: "LTJ.lines.json"

env:
  OUT_CSV: data/cases.csv

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out CourtFirst (this repo)
        uses: actions/checkout@v4

      - name: Check out LTJ-ui (private) read-only
        uses: actions/checkout@v4
        with:
          repository: Info1691/LTJ-ui
          ref: ${{ github.event.inputs.ltj_ref }}
          token: ${{ secrets.LTJ_UI_TOKEN }}
          path: LTJ-ui

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip

      - name: Show LTJ lines file & quick count
        run: |
          set -e
          LINES="LTJ-ui/out/${{ github.event.inputs.lines_filename }}"
          echo "Using lines JSON: $LINES"
          if [ ! -f "$LINES" ]; then
            echo "ERROR: lines JSON not found at $LINES" >&2
            exit 1
          fi
          python - << 'PY'
import json,sys
p="LTJ-ui/out/${{ github.event.inputs.lines_filename }}"
d=json.load(open(p,"r",encoding="utf-8"))
print("Total lines in JSON:", len(d) if isinstance(d,list) else "not-a-list")
# show a couple from the requested range
start=int("${{ github.event.inputs.start_line }}")
end=int("${{ github.event.inputs.end_line }}")
hits=[r for r in d if isinstance(r,dict) and "line_no" in r and start<=int(r["line_no"])<=end]
print("Lines in requested range:", len(hits))
for r in hits[:3]:
    print("Sample:", r.get("line_no"), r.get("text","")[:120])
PY

      - name: Extract clean case titles (Column B)
        run: |
          python tools/extract_cases_from_lines.py \
            --ltj-lines "LTJ-ui/out/${{ github.event.inputs.lines_filename }}" \
            --start ${{ github.event.inputs.start_line }} \
            --end ${{ github.event.inputs.end_line }} \
            --out "${{ env.OUT_CSV }}"

      - name: Show result head
        run: |
          echo "----- HEAD OF CSV -----"
          head -n 20 "${{ env.OUT_CSV }}" || true

      - name: Upload artifact (cases.csv)
        uses: actions/upload-artifact@v4
        with:
          name: cases.csv
          path: ${{ env.OUT_CSV }}

      - name: Commit results into CourtFirst
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ env.OUT_CSV }}
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update cases.csv from LTJ lines ${{
              github.event.inputs.start_line }}â€“${{ github.event.inputs.end_line }}"
            git push
          fi
